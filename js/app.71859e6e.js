(() => { const e = [{ name: "ÂèØÁà±Êú±ÂâçÁî∑Âèã", imgUrl: "https://s2118231.github.io/kazlover/static/img/ex.jpg", weight: 10, good: !1 }, { name: "ÂèØÁà±Êú±ËÑæÊ∞îÂêêÊßΩËÄÖ", imgUrl: "https://s2118231.github.io/kazlover/static/img/tucao.jpg", weight: 2, good: !1 }, { name: "Â´âÂ¶íÂèØÁà±Êú±È¢úÂÄºÁöÑ‰∫∫", imgUrl: "https://s2118231.github.io/kazlover/static/img/uglywomen.jpg", weight: 1, good: !1 }, { name: "ÂèØÁà±Êú±ÂÆàÊä§ËÄÖ", imgUrl: "https://s2118231.github.io/kazlover/static/img/178.jpg", weight: 1, good: !0 }], t = [10, 5], s = 30; window.onload = function () { new Vue({ el: "#app", data: { health: 100, ended: !1, batman: ["AIEEE!!!!", "AIIEEE!!!!", "ARRGH!!!!", "AWK!!!!", "AWKKKKKK!!!!", "BAM!!!!", "BANG!!!!", "BANG - ETH!!!!", "BIFF!!!!", "BLOOP!!!!", "BLURP!!!!", "BOFF!!!!", "BONK!!!!", "CLANK!!!!", "CLANK - EST!!!!", "CLASH!!!!", "CLUNK!!!!", "CLUNK - ETH!!!!", "CRRAACK!!!!", "CRASH!!!!", "CRRAACK!!!!", "CRUNCH!!!!", "CRUNCH - ETH!!!!", "EEE - YOW!!!!", "FLRBBBBB!!!!", "GLIPP!!!!", "GLURPP!!!!", "KAPOW!!!!", "KAYO!!!!", "KER - SPLOOSH!!!!", "KERPLOP!!!!", "KLONK!!!!", "KLUNK!!!!", "KRUNCH!!!!", "OOOFF!!!!", "OOOOFF!!!!", "OUCH!!!!", "OUCH - ETH!!!!", "OWWW!!!!", "OW - ETH!!!!", "PAM!!!!", "PLOP!!!!", "POW!!!!", "POWIE!!!!", "QUNCKKK!!!!", "RAKKK!!!!", "RIP!!!!", "SLOSH!!!!", "SOCK!!!!", "SPLATS!!!!", "SPLATT!!!!", "SPLOOSH!!!!", "SWAAP!!!!", "SWISH!!!!", "SWOOSH!!!!", "THUNK!!!!", "THWACK!!!!", "THWACKE!!!!", "THWAPE!!!!", "THWAPP!!!!", "UGGH!!!!", "URKKK!!!!", "VRONK!!!!", "WHACK!!!!", "WHACK - ETH!!!!", "WHAM - ETH!!!!", "WHAMM!!!!", "WHAMMM!!!!", "WHAP!!!!", "Z - ZWAP!!!!", "ZAM!!!!", "ZAMM!!!!", "ZAMMM!!!!", "ZAP!!!!", "ZAP - ETH!!!!", "ZGRUPPP!!!!", "ZLONK!!!!", "ZLOPP!!!!", "ZLOTT!!!!", "ZOK!!!!", "ZOWIE!!!!", "ZWAPP!!!!", "ZZWAP!!!!", "ZZZZWAP!!!!", "ZZZZZWAP!!!!"], time: s, chosenWord: "", weapons: ["üó°Ô∏è", "üî™", "üî´"], credits: [10, 5], total: 0, timer: null, remainTimer: null, curEnemy: e[Math.floor(Math.random() * e.length)], neededWeaponIndex: 0, uselessWeaponIndex: 1, remainTime: s, earnedCredit: 0 }, mounted() { this.timer ? clearInterval(this.timer) : this.timer = setInterval(this.updateEnemy, 1500), this.remainTimer ? clearInterval(this.tiktoc) : this.timer = setInterval(this.tiktoc, 1e3) }, methods: { tiktoc() { 0 == this.remainTime && (this.ended = !0), this.ended || this.remainTime-- }, updateEnemy() { this.ended || (this.curEnemy = e[Math.floor(Math.random() * e.length)], this.neededWeaponIndex = Math.floor(3 * Math.random()), this.uselessWeaponIndex = (this.neededWeaponIndex + 1) % 3) }, attack: function (e) { this.earnedCredit = 0; var s = new Audio("https://s2118231.github.io/kazlover/static/sounds/fainted.mp3"); if (this.curEnemy.good) this.earnedCredit = -this.curEnemy.weight * t[0]; else if (e == this.uselessWeaponIndex ? this.earnedCredit = -this.curEnemy.weight * t[1] : e == this.neededWeaponIndex ? this.earnedCredit = this.curEnemy.weight * t[0] : this.earnedCredit = this.curEnemy.weight * t[1], 0 == e) { var n = new Audio("https://s2118231.github.io/kazlover/static/sounds/knockout.wav"); n.play() } else if (1 == e) { var i = new Audio("https://s2118231.github.io/kazlover/static/sounds/punch.mp3"); i.play() } else { s.play(); n = new Audio("https://s2118231.github.io/kazlover/static/sounds/knockout.wav") } this.total += this.earnedCredit, console.log(this.total), this.updateEnemy() }, punch: function () { this.health -= 10, this.health <= 0 && (this.ended = !0, this.playKnockout()) }, restart: function () { this.remainTime = s, this.ended = !1, this.chosenWord = "", this.total = 0, this.earnedCredit = 0 }, playPunch: function () { var e = new Audio("https://s2118231.github.io/kazlover/static/sounds/punch.mp3"); e.play() }, playKnockout: function () { var e = new Audio("https://s2118231.github.io/kazlover/static/sounds/knockout.wav"), t = new Audio("https://s2118231.github.io/kazlover/static/sounds/fainted.mp3"); t.play(), e.play() }, playSegway: function () { var e = new Audio("https://s2118231.github.io/kazlover/static/sounds/segway.mp3"); e.play() }, pickWords: function () { this.chosenWord = this.batman[Math.floor(Math.random() * this.batman.length)] }, beforeDestroy() { clearInterval(this.timer) } } }) } })();
//# sourceMappingURL=app.71859e6e.js.map